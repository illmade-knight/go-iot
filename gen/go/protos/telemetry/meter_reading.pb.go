// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.27.1
// source: telemetry/meter_reading.proto

package telemetrypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MeterReading represents the structured meter reading data after decoding.
type MeterReading struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	Uid                        string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                                                                    // BigQuery: uid
	Reading                    float32                `protobuf:"fixed32,2,opt,name=reading,proto3" json:"reading,omitempty"`                                                                          // BigQuery: reading
	AverageCurrent             float32                `protobuf:"fixed32,3,opt,name=average_current,json=averageCurrent,proto3" json:"average_current,omitempty"`                                      // BigQuery: average_current
	MaxCurrent                 float32                `protobuf:"fixed32,4,opt,name=max_current,json=maxCurrent,proto3" json:"max_current,omitempty"`                                                  // BigQuery: max_current
	MaxVoltage                 float32                `protobuf:"fixed32,5,opt,name=max_voltage,json=maxVoltage,proto3" json:"max_voltage,omitempty"`                                                  // BigQuery: max_voltage
	AverageVoltage             float32                `protobuf:"fixed32,6,opt,name=average_voltage,json=averageVoltage,proto3" json:"average_voltage,omitempty"`                                      // BigQuery: average_voltage
	DeviceEui                  string                 `protobuf:"bytes,7,opt,name=device_eui,json=deviceEui,proto3" json:"device_eui,omitempty"`                                                       // BigQuery: device_eui
	ClientId                   string                 `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`                                                          // BigQuery: client_id
	LocationId                 string                 `protobuf:"bytes,9,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`                                                    // BigQuery: location_id
	DeviceCategory             string                 `protobuf:"bytes,10,opt,name=device_category,json=deviceCategory,proto3" json:"device_category,omitempty"`                                       // BigQuery: device_category
	OriginalMqttTime           *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=original_mqtt_time,json=originalMqttTime,proto3" json:"original_mqtt_time,omitempty"`                               // BigQuery: original_mqtt_time
	UpstreamIngestionTimestamp *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=upstream_ingestion_timestamp,json=upstreamIngestionTimestamp,proto3" json:"upstream_ingestion_timestamp,omitempty"` // BigQuery: upstream_ingestion_timestamp
	ProcessedTimestamp         *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=processed_timestamp,json=processedTimestamp,proto3" json:"processed_timestamp,omitempty"`                           // BigQuery: processed_timestamp
	DeviceType                 string                 `protobuf:"bytes,14,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`                                                   // BigQuery: device_type
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *MeterReading) Reset() {
	*x = MeterReading{}
	mi := &file_telemetry_meter_reading_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeterReading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeterReading) ProtoMessage() {}

func (x *MeterReading) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_meter_reading_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeterReading.ProtoReflect.Descriptor instead.
func (*MeterReading) Descriptor() ([]byte, []int) {
	return file_telemetry_meter_reading_proto_rawDescGZIP(), []int{0}
}

func (x *MeterReading) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *MeterReading) GetReading() float32 {
	if x != nil {
		return x.Reading
	}
	return 0
}

func (x *MeterReading) GetAverageCurrent() float32 {
	if x != nil {
		return x.AverageCurrent
	}
	return 0
}

func (x *MeterReading) GetMaxCurrent() float32 {
	if x != nil {
		return x.MaxCurrent
	}
	return 0
}

func (x *MeterReading) GetMaxVoltage() float32 {
	if x != nil {
		return x.MaxVoltage
	}
	return 0
}

func (x *MeterReading) GetAverageVoltage() float32 {
	if x != nil {
		return x.AverageVoltage
	}
	return 0
}

func (x *MeterReading) GetDeviceEui() string {
	if x != nil {
		return x.DeviceEui
	}
	return ""
}

func (x *MeterReading) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *MeterReading) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *MeterReading) GetDeviceCategory() string {
	if x != nil {
		return x.DeviceCategory
	}
	return ""
}

func (x *MeterReading) GetOriginalMqttTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalMqttTime
	}
	return nil
}

func (x *MeterReading) GetUpstreamIngestionTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.UpstreamIngestionTimestamp
	}
	return nil
}

func (x *MeterReading) GetProcessedTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedTimestamp
	}
	return nil
}

func (x *MeterReading) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

var File_telemetry_meter_reading_proto protoreflect.FileDescriptor

const file_telemetry_meter_reading_proto_rawDesc = "" +
	"\n" +
	"\x1dtelemetry/meter_reading.proto\x12\x1fservicemanager.protos.telemetry\x1a\x1fgoogle/protobuf/timestamp.proto\"\xea\x04\n" +
	"\fMeterReading\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12\x18\n" +
	"\areading\x18\x02 \x01(\x02R\areading\x12'\n" +
	"\x0faverage_current\x18\x03 \x01(\x02R\x0eaverageCurrent\x12\x1f\n" +
	"\vmax_current\x18\x04 \x01(\x02R\n" +
	"maxCurrent\x12\x1f\n" +
	"\vmax_voltage\x18\x05 \x01(\x02R\n" +
	"maxVoltage\x12'\n" +
	"\x0faverage_voltage\x18\x06 \x01(\x02R\x0eaverageVoltage\x12\x1d\n" +
	"\n" +
	"device_eui\x18\a \x01(\tR\tdeviceEui\x12\x1b\n" +
	"\tclient_id\x18\b \x01(\tR\bclientId\x12\x1f\n" +
	"\vlocation_id\x18\t \x01(\tR\n" +
	"locationId\x12'\n" +
	"\x0fdevice_category\x18\n" +
	" \x01(\tR\x0edeviceCategory\x12H\n" +
	"\x12original_mqtt_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\x10originalMqttTime\x12\\\n" +
	"\x1cupstream_ingestion_timestamp\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\x1aupstreamIngestionTimestamp\x12K\n" +
	"\x13processed_timestamp\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\x12processedTimestamp\x12\x1f\n" +
	"\vdevice_type\x18\x0e \x01(\tR\n" +
	"deviceTypeBLZJgithub.com/illmade-knight/ai-power-mvp/gen/go/protos/telemetry;telemetrypbb\x06proto3"

var (
	file_telemetry_meter_reading_proto_rawDescOnce sync.Once
	file_telemetry_meter_reading_proto_rawDescData []byte
)

func file_telemetry_meter_reading_proto_rawDescGZIP() []byte {
	file_telemetry_meter_reading_proto_rawDescOnce.Do(func() {
		file_telemetry_meter_reading_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_telemetry_meter_reading_proto_rawDesc), len(file_telemetry_meter_reading_proto_rawDesc)))
	})
	return file_telemetry_meter_reading_proto_rawDescData
}

var file_telemetry_meter_reading_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_telemetry_meter_reading_proto_goTypes = []any{
	(*MeterReading)(nil),          // 0: servicemanager.protos.telemetry.MeterReading
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_telemetry_meter_reading_proto_depIdxs = []int32{
	1, // 0: servicemanager.protos.telemetry.MeterReading.original_mqtt_time:type_name -> google.protobuf.Timestamp
	1, // 1: servicemanager.protos.telemetry.MeterReading.upstream_ingestion_timestamp:type_name -> google.protobuf.Timestamp
	1, // 2: servicemanager.protos.telemetry.MeterReading.processed_timestamp:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_telemetry_meter_reading_proto_init() }
func file_telemetry_meter_reading_proto_init() {
	if File_telemetry_meter_reading_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_telemetry_meter_reading_proto_rawDesc), len(file_telemetry_meter_reading_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_telemetry_meter_reading_proto_goTypes,
		DependencyIndexes: file_telemetry_meter_reading_proto_depIdxs,
		MessageInfos:      file_telemetry_meter_reading_proto_msgTypes,
	}.Build()
	File_telemetry_meter_reading_proto = out.File
	file_telemetry_meter_reading_proto_goTypes = nil
	file_telemetry_meter_reading_proto_depIdxs = nil
}
